<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tagtool.tagDao.TestResultDao">
    <resultMap id="entityOnlyMap" type="com.example.tagtool.tagEntity.TestResult">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="task_id" property="task_id" jdbcType="INTEGER"/>
        <result column="paragraph_id" property="paragraph_id" jdbcType="INTEGER"/>
        <result column="paragraph_position" property="paragraph_position" jdbcType="VARCHAR"/>
        <result column="user_account" property="user_account" jdbcType="VARCHAR"/>
        <result column="res_label" property="res_label" jdbcType="VARCHAR"/>
        <result column="task_type" property="task_type" jdbcType="INTEGER"/>
    </resultMap>
    <!--插入用户的测试集标注结果-->
    <insert id="insertTestRes" parameterType="com.example.tagtool.tagEntity.TestResult">
            insert into tb_test_result (task_id,paragraph_id,paragraph_position,user_account,res_label,task_type)
                values (#{task_id},#{paragraph_id},#{paragraph_position},#{user_account},#{res_label},#{task_type})
    </insert>
    <!--根据id更新测试集标注信息-->
    <update id="updateTestResById" parameterType="com.example.tagtool.tagEntity.TestResult">
        update tb_test_result set res_label = #{res_label} where id = #{id}
    </update>
    <!--根据标注者账号删除测试集标注信息-->
    <delete id="deleteTestLabelByAccount" parameterType="String">
            delete
            from tb_test_result
            where user_account = #{user_account}
    </delete>
    <!--    根据任务id删除测试集标注信息-->
    <delete id="deleteTestLabelByTaskId" parameterType="int">
            delete
            from tb_test_result
            where task_id = #{task_id}
    </delete>
    <!--    根据任务id和段落id查询标注结果-->
    <select id="findTestLabelByTaskAndParagraph" resultType="com.example.tagtool.tagEntity.TestResult">
        select *
        from tb_test_result
        where task_id = #{task_id} and paragraph_id = #{paragraph_id}
    </select>
    <!--    根据任务id和用户account查询已标注的测试集段落-->
    <select id="findFinishTestParagraphNumByTaskId" resultType="Int" parameterType="com.example.tagtool.tagEntity.TestResult">
        select count(*)
        from tb_test_result
        where res_label is not null  and res_label &lt;&gt; '' and task_id = #{task_id} and user_account = #{user_account}
    </select>
    <!--    根据任务id和用户account查询第一条未被标记的测试集段落，返回TestResult中的id和paragraph_position-->
    <select id="findFirstUnfinishedTestParagraph" resultType="com.example.tagtool.tagEntity.TestResult">
        select *
        from tb_test_result
        where (res_label is null  or res_label = '') and task_id = #{task_id} and user_account = #{user_account}
        order by paragraph_position
        Limit 0,1
    </select>
    <!--    根据任务id、用户账号、当前段落位置找到下一条未被标记的测试集段落,返回TestResult中的id和paragraph_position-->
    <select id="findNextUnfinishedTestParagraph" resultType="com.example.tagtool.tagEntity.TestResult">
        select *
        from tb_test_result
        where (res_label is null  or res_label = '') and task_id = #{task_id} and user_account = #{user_account} and paragraph_position &gt; #{paragraph_position}
        order by paragraph_position
        Limit 0,1
    </select>
    <!--    根据任务id、用户账号、当前段落位置找到上一条未被标记的测试集段落,返回labelResult中的id和paragraph_position-->
    <select id="findLastUnfinishedTestParagraph" resultType="com.example.tagtool.tagEntity.TestResult">
        select *
        from tb_test_result
        where (res_label is null  or res_label = '') and task_id = #{task_id} and user_account = #{user_account} and paragraph_position &lt; #{paragraph_position}
        order by paragraph_position desc
        Limit 0,1
    </select>
    <!--    根据结果id查询测试集标注结果-->
    <select id="findTestLabelResultById" resultType="com.example.tagtool.tagEntity.TestResult">
        select *
        from tb_test_result
        where id=#{id}
    </select>
</mapper>
