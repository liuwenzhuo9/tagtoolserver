<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tagtool.tagDao.TaskContentDao">
    <!--resultMap对应的是表与实体类的映射  - type 数据库表对应的实体类，别名或完整类名都可以-->
    <resultMap id="taskContentMap" type="com.example.tagtool.tagEntity.TaskContent">
        <!-- 结果集的主键 -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <!-- 普通的列  -column 是数据库中字段， property是实体类中字段-->
        <result column="task_id" property="task_id" jdbcType="INTEGER"/>
        <result column="task_name" property="task_name" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="paragraph_position" property="paragraph_position" jdbcType="INTEGER" />
        <result column="is_test" property="is_test" jdbcType="INTEGER" />
        <result column="task_type" property="task_type" jdbcType="INTEGER" />
        <result column="test_label" property="test_label" jdbcType="VARCHAR" />
    </resultMap>
    <!--插入任务具体段落内容-->
    <insert id="insertTaskContent" parameterType="com.example.tagtool.tagEntity.TaskContent">
        insert into tb_task_content (task_id,content,paragraph_position,task_name,is_test,task_type,test_label)
        values (#{task_id}, #{content},#{paragraph_position},#{task_name},#{is_test},#{task_type},#{test_label})
    </insert>
<!--根据任务id删除段落内容-->
    <delete id="deleteContentByTaskId">
        delete from tb_task_content where task_id = #{task_id}
    </delete>
<!--    根据任务id查找段落内容-->
    <select id="findContentByTaskIdAndIsTest" resultType="com.example.tagtool.tagEntity.TaskContent" resultMap="taskContentMap">
        select *
        from tb_task_content
        where task_id = #{task_id} and is_test = #{is_test}
        order by paragraph_position
    </select>
<!--    根据任务id查询任务一共有多少个段落-->
    <select id="findParagraphNumByTaskIdAndIsTest" resultType="Int">
        select count(*)
        from tb_task_content where task_id = #{task_id} and is_test = #{is_test}
    </select>
<!--根据段落id查询段落内容-->
    <select id="findContentByParagraphId" resultType="String" parameterType="Int">
        select content
        from tb_task_content
        where id = #{id}
    </select>
    <!--    根据任务id查询测试集已标注的段落数-->
    <select id="findLabeledTestNumByTaskId" resultType="Int" >
        select count(*)
        from tb_task_content
        where task_id = #{task_id} and test_label is not null and test_label &lt;&gt; '' and is_test = 1
    </select>
    <!--    根据任务id和段落位置更新测试集结果-->
    <update id="updateRightLabel">
        update tb_task_content
        set test_label = #{test_label}
        where task_id = #{task_id} and paragraph_position=#{paragraph_position} and is_test = 1
    </update>
    <!--    根据任务id查询第一条未被标记的测试集段落-->
    <select id="findFirstUnfinishedTestParagraph" resultType="com.example.tagtool.tagEntity.TaskContent">
        select *
        from tb_task_content
        where (test_label is null  or test_label = '') and task_id = #{task_id} and is_test = 1
        order by paragraph_position
        Limit 0,1
    </select>
    <!--    根据任务id、当前段落位置找到下一条未被标记的测试集段落-->
    <select id="findNextUnfinishedTestParagraph" resultType="com.example.tagtool.tagEntity.TaskContent">
        select *
        from tb_task_content
        where (test_label is null  or test_label = '') and task_id = #{task_id} and paragraph_position &gt; #{paragraph_position} and is_test = 1
        order by paragraph_position
        Limit 0,1
    </select>
    <!--    根据任务id、当前段落位置找到上一条未被标记的测试集段落-->
    <select id="findLastUnfinishedTestParagraph" resultType="com.example.tagtool.tagEntity.TaskContent">
        select *
        from tb_task_content
        where (test_label is null  or test_label = '') and task_id = #{task_id} and paragraph_position &lt; #{paragraph_position} and is_test = 1
        order by paragraph_position desc
        Limit 0,1
    </select>
    <!--    根据任务id查询第一条测试集段落-->
    <select id="findFirstTestParagraph" resultType="com.example.tagtool.tagEntity.TaskContent">
        select *
        from tb_task_content
        where task_id = #{task_id} and is_test = 1 and paragraph_position=0
    </select>
    <!--    根据任务id、当前段落位置找到下一条测试集段落-->
    <select id="findNextTestParagraph" resultType="com.example.tagtool.tagEntity.TaskContent">
        select *
        from tb_task_content
        where task_id = #{task_id} and paragraph_position &gt; #{paragraph_position} and is_test = 1
        order by paragraph_position
        Limit 0,1
    </select>
    <!--    根据任务id、当前段落位置找到上一条测试集段落-->
    <select id="findLastTestParagraph" resultType="com.example.tagtool.tagEntity.TaskContent">
        select *
        from tb_task_content
        where task_id = #{task_id} and paragraph_position &lt; #{paragraph_position} and is_test = 1
        order by paragraph_position desc
        Limit 0,1
    </select>
<!--    根据任务id获取该任务的测试集结果-->
    <select id="getTestLabelByTaskId" resultType="String" parameterType="Int">
        select test_label
        from tb_task_content
        where task_id = #{task_id} and is_test = 1
        order by paragraph_position
    </select>
</mapper>


