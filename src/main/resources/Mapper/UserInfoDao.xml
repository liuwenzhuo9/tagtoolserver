<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tagtool.tagDao.UserInfoDao">
    <!--resultMap对应的是表与实体类的映射  - type 数据库表对应的实体类，别名或完整类名都可以-->
    <resultMap id="userInfoMap" type="com.example.tagtool.tagEntity.UserInfo">
        <!-- 结果集的主键 -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <!-- 普通的列  -column 是数据库中字段， property是实体类中字段-->
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="involved_tasks" property="involved_tasks" jdbcType="VARCHAR" />
        <result column="finished_tasks" property="finished_tasks" jdbcType="VARCHAR" />
        <result column="progress_tasks" property="progress_tasks" jdbcType="VARCHAR" />
        <result column="power_l1" property="power_l1" jdbcType="DOUBLE" />
        <result column="power_l2" property="power_l2" jdbcType="DOUBLE" />
        <result column="power_l3" property="power_l3" jdbcType="DOUBLE" />
        <result column="power_s" property="power_s" jdbcType="DOUBLE" />
        <result column="points" property="points" jdbcType="DOUBLE" />
        <result column="complete_rate" property="complete_rate" jdbcType="DOUBLE" />

    </resultMap>
    <!--插入人员信息-->
    <insert id="insertUserInfo" parameterType="com.example.tagtool.tagEntity.UserInfo">
        insert into tb_user_info (name,account,involved_tasks,finished_tasks,progress_tasks, points, power_l1, power_l2, power_l3, power_s, complete_rate)
        values (#{name},#{account},#{involved_tasks},#{finished_tasks},#{progress_tasks},#{points},#{power_l1},#{power_l2},#{power_l3},#{power_s}, #{complete_rate})
    </insert>
<!--    根据用户账号查询用户信息-->
    <select id="findInfoByUserAccount" resultMap="userInfoMap" resultType="com.example.tagtool.tagEntity.UserInfo">
        select *
        from tb_user_info
        where account =#{account}
    </select>
<!--    根据用户账号更新任务情况-->
    <update id="updateTasksByUserAccount">
        update tb_user_info
        set involved_tasks = #{involved_tasks},
            finished_tasks = #{finished_tasks},
            progress_tasks = #{progress_tasks},
            issue_tasks = #{issue_tasks}
         where account =#{account}
    </update>
    <!--    当用户发布任务时，根据用户账号更新参与任务和进行的任务情况-->
    <update id="updateJoinTasksByUserAccount">
        update tb_user_info
        set involved_tasks = #{involved_tasks},
            progress_tasks = #{progress_tasks}
         where account =#{account}
    </update>
<!--    当用户完成任务时，根据用户账号更新已完成的任务情况-->
    <update id="updateFinishTasksByUserAccount">
        update tb_user_info
        set progress_tasks = #{progress_tasks},
            finished_tasks = #{finished_tasks}
         where account =#{account}
    </update>
<!--    根据用户账号删除user信息-->
    <delete id="deleteUser">
        delete
        from tb_user_info
        where account = #{account}
    </delete>
<!--    根据用户账号更新用户积分情况-->
    <update id="updatePointsByAccount">
        update tb_user_info
        set points = #{points}
         where account =#{account}
    </update>
    <!--    根据用户账号更新用户标注能力-->
    <update id="updatePowerByAccount">
        update tb_user_info
        set power_l1 = #{power_l1},
            power_l2 = #{power_l2},
            power_l3 = #{power_l3},
            power_s = #{power_s},
            complete_rate = #{complete_rate}
         where account =#{account}
    </update>
    <!--    查询能力排序前20的用户信息-->
    <select id="findTopUserOnLabelType" parameterType="java.lang.String" resultMap="userInfoMap" resultType="com.example.tagtool.tagEntity.UserInfo">
        select *
        from tb_user_info
        order by ${type} desc limit 20
        <!--        <if test='type == "power_l1"' >-->
        <!--            order by  power_l1 desc limit 10-->
        <!--        </if>-->
        <!--        <if test="type == 'power_l2'" >-->
        <!--            order by  power_l2 desc limit 10-->
        <!--        </if>-->
        <!--        <if test="type == 'power_l3'" >-->
        <!--            order by  power_l3 desc limit 10-->
        <!--        </if>-->
        <!--        <if test="type == 'power_s'" >-->
        <!--            order by  power_s desc limit 10-->
        <!--        </if>-->
    </select>
</mapper>


